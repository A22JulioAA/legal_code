# Generated by Django 4.2.11 on 2024-05-09 13:57

from django.db import migrations, models
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Nombre del usuario')),
                ('apellidos', models.CharField(blank=True, max_length=100, null=True, verbose_name='Apellidos del usuario')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='Email del usuario')),
                ('password', models.CharField(max_length=100, verbose_name='Contraseña')),
                ('fecha_nacimiento', models.DateField(verbose_name='Fecha de nacimiento del usuario')),
                ('telefono', models.CharField(max_length=20, verbose_name='Teléfono del usuario')),
                ('imagen_perfil', models.ImageField(max_length=200, upload_to='images/perfil/', verbose_name='Imagen de perfil')),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('lost_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
            managers=[
                ('objects', users.models.CustomUserManager()),
            ],
        ),
    ]
